%!PS-Adobe-2.0 EPSF-1.2%%Title: sio logo%%Creator: FreeHand 9.0%%CreationDate: 2/4/04 11:55 AM%%BoundingBox: 0 0 418 214%%FHPathName:Sio-Eckes:termékfotok:fotok+komp 2004:logok:sio:sio logo%ALDOriginalFile:Sio-Eckes:termékfotok:fotok+komp 2004:logok:sio:sio logo%ALDBoundingBox: -89 -464 523 328%%FHPageNum:1%%DocumentSuppliedResources: procset Altsys_header 4 0%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentCustomColors: (PANTONE 288 CVC)%%CMYKCustomColor: 1 0.65 0 0.305 (PANTONE 288 CVC)%%CMYKProcessColor: 0 0 1 0 (0c 0m 100y 0k)%%+ 0 1 1 0 (0c 100m 100y 0k)%%EndComments%%BeginAGDEmbeddedDoc: version 1.0%:s8W,W5t=="^::eu!!!J,GQGK\$$9.s)?)FUjPBkCCBD<`'WUJk%:s8VPCJqO1+_Ft`.5\(66eegrp&m<F6_$Se^9Rs@%YUWM+<KLLN`Ngnk.%h=6S>$eH.Zdi0J6!R<odEp)/hKc3s1\4SR0fDWGhV"7H/H=0?giKRs1OM^r+HF#7Wrg8NJPg>j&1SYa;8]6\a])CC>?ZJ9+@dCb+Uqd".GY%4^rbcht)A]Je%'Y8?nssr2CE*JsG#n<XsHda?*6PV%V>rT&&KppbL[.?_^mo*%7dDV:.+jUJ,tNqA]!U%:c]Jo-0pIK$"JsIUr"05J*<UUpS_=9/M9"PRWI&i`r-YVj096qrXTP@#ab%o.i)u#:'kj:5e`IJ?;Llr5I4AtYQ8"3EXneebCNB1#d.5r!6sVH(C1(a]6OWI_(/!m0d!a<)BX^m%pJLmanRUCCI>Jlg:LapE4F7L*J_E5l[`0Ak)7iq=@'c!@<.FkM3Q9?S=Dfa(E"I^i92#2j:d7oUJhW[2W%GEPp=+YF.>0`k?+Gk7)&)kj[m?n,%:Qc!p&bB;hFF*OIlX%F`s,.%/7m:U*eRNe(kj)0`^p9nD:.7!,q&%@`'s%=^s^T2JVRim)4'l$,-7Z]<=*`=fD89k-C!l@#n0CFAK9Ydb*X0q)17:FcQZFj&V7-KfjM"jI\E4P]&cP+jKeqKQ\j5oZF`b6k?D_jl[roS[dRN2!9AWCE$$FT<ZCKNM_6Zh/2-;G_*hnX%K:Xc/i`)5>!%D.+nTuWU4DYKUtG>9WqpO7(?fdUiM8epmX%:DXHe)NZ;T$),7+[hV3e9.iO94M%^pLVg^D-\6PW(`3Q\UaEaPpLoZshMs],Km#?m,"k@sdYS8b@WdA,0cO<ThX9nf=-'UI>!u+41.%IkX"8LkbWl/Jhf3GfO^$k=#\3pk/M,H;!G6]#>H0jH*1]dN\EESUcMTgWT1Nboe1[=(j;u2beVKSf"2+]rq/8<+YRg,i9r(:Zeg-'<`s*/EHY2Wtf\>W!LD/l&A*`gm4M6^imShAW875H:6%:d:&ol$*)`QQE"C3QL^eM8D05oh!RnDiG<=;>tQr"aQsl@6&:Yq4&-;a,lN=@;&&p8)P9rBF,\>P4&\b08fcj.Te^NKma+`6kk`[!dW[0)53UB0Am^g:Y[/q>9)!;CMpmjBn?%p)&A`aO<ci#.s8?rBZa?VGSi^fgC62>46*.jBM]2%9:N!$KAUmY:fV#J:(3gbO&la6WiJASHfT>sJ.m@X#6m<qVMt)8m[5!ZX83#$la#$>$3UR>?%:_=\3gan-.blT^?]&1+;=Gja%Fp0ttBLf\AC]r4I6:#o[LFHk(UTr"k2=MUW5`La3Ra)[%ES>@OU_/9/`;Ss227j'r6"m#<-j]ducjf:sJb:2$;GpV6]A=B)h8>X[HkTLj3A"dNT,!^PQlB1f%R0iB_/i$]JhJ2G/gQ0*FV>tW4e8e^,q->_JdoVJ`X"]\K,e7p7*L9S/DM<q\1(5TMQ`[cK8fHo1$f$J2IBo>'5,!hnC!(EHr%eAh%:#S4t0\Qoo]i.5+h4/KKl>5iur*AQW?o8I_F\Ts/#ptE$Vb&KmiX7i45WJ6XeAS8sk<74#kmU64Q7U)^9`lr-/:NnnWM'a^mOgqqB%q0&&D3)c>LAm/L2GIeK/8#crFZ:O#0=MbHNdiRc_L%1q,7hj%Y>8V*Icc)>B]^V'?Jclh?b7d['!KK0LY"4oEUJ37k3bpJ\9j;WdVF\A]\4[\VhHh(\DLLGg\QQ$*1832cOL`$]fqN6cBKEH%:Il!#=(jDlCc7V..V?Ch&\Y#E.6]N1Q`M9oK<8>SYE`)Q^O\df(Q=&H!/<LFQk(RIq%3,'Q\UA1^Lc[Rc5'sqtQuKU$gljLT8b8r(P5AjHM+8AcQ+u&++DRtFaPDVjCB]N2iKN@ZT78Jb>P58V3bP\L2)J+3>MkdD<^,23<``piNOJt#e]@u(`U59[rS2[aWda*3>VZ15;>mt`Z?l+;;4Vl1Y5$$RMKEj(>h*tRW*Zr%Y+/K<(0FgD%:<aWHff=.0o$B#o.E_A<dZBcua^X\7)V5D^Hq,DBpR/U]gI.h6eGbiV2TBI-2,^]GbZFW]5R!Ee->Wqk<-sM!a0($<)'s?lrN\#CF&5+7jjhd)^Z2)c(A[-A%PP0\NPS6"$(&RtI.s!l_&prKf-=[-eR$:fW.ANtc`0uH2AFGUc@cXM^Z;9D)-<V,OQ%N?M7I9EVb/Ef:U.<PeaXkJ9-;Ap&<).`'MAZ%hJ]sb7+Js"8Q;`MR-]i,+%:ZA6H*RJ,)a3VgO=7U&)9]N:`$%(5s$6K2="]\fP&4':pnHI[uU"1%%&Uk:?RgWqu0Nu[qICpg3H^(N4gG59E7h[7*@;M,JAb@@M7AY21GaHN<H182N5&"I@S;N\^Oah94RAb=UOj@d<2afqDoP^Cgp2mjA_o"*W:Qt4j^YKL(kjZkJc`M$l%EaQZX7N@[B%i6O2]M<*`PXiKF'1ZuEP=Nq`/^D%X6lp,`MW8iugf*W&o=;AY,SBo[%:VF2L)W*W^HFB@liI?(/\l.'!U)Lb,FYPD@>RTV8'Sbc0#l8aTqgpW5LP<3g])Ju"0m73E'<>=1[S1,37cI1^oG2)q8*2r;r-&*`;8kY[^d0P2_i`i#DO^KY6A*n*"L,P[FXXIB_2on-eFmJS&gJ;]XQm:I6r<^#Cpk.RYpYT@ha"KXPUTAnA"]<$E]rVZ(,sDbhPdQu49`"Cn,I05pY5#A?]<"0F9jCj9+ue<4b@A,ji/HGFj?rVu%:,K^s.lI*=])5#[@"(TcCR)En73I=JJde12g,It@D9KLu")^WH/DPPIb%L4O`[_,F.e^PuX%uY,p9[pIuOZd8Rh<c(p>]n>-4<F%H([pqi&5b[Q@>u@2)XmJV2#Y/3BI5JO_TT4IaqnEt*$oH3[X-l3*suC_G(4Y=I"'oY8Q3bGVRAB=1+DZo1.s&!\&&_]l4'_kYY*$mN%>G!0Jp0@DPQUXEmm,<;<;h&0:-7C4\aYM#'o-iH&l[(%:p$%5$g-L4N*V3#u7Z6LJ,En;Y@%`Tj"Ll5S^2Frg8Q2o02^:rtiNe4JE#WY!c6d`n2@E[5%(0hS.p$d(kJl;jL;kGOSqPE_PN`YfBG`KWQ,2A]b#b*mH(BqLU5(rmnLPERfkd,7^57nAEAWa]6\dmH]V\h4">&2=!HNP$HNQ$?$_/*[as&Dh6D(I(Z$>YH,&8_60CQqXfJ;K$$>PJ_$@2]#-pa!F8ZT\e"8H$@AF9X^$H>emL)Q)h%:@LE*s+[jZ8699&nD.I[\Rt6^_;oS,`U4r_W1==d]_!tU*(QtaB7tCEtkigOn=6f/kKr0r8r[8Vh9lJP_9d.P;[gY9NCn*gEk]21$jYSV>j==Nq(/&c9NNCX^/TrV>Z6o0630WK>dd$WS,1VFC35S^X;c2Tqk&`Yk'.fQ_iKrmG&IQ7G8I'aGcoXS8GhC(67]I!_B$e492M1-<8Bi>;*M)!cs,Wg;Fn@fhdrT-U1@,Bcbt`^_A&Zj/%:?F>ug5L*<V4IfVM8ufe#+(8/Xl2T.k*;db+PqL\27J0LeTi\i$i0DD@de8sCS$r'=`8)LD=mj2g2gm.OOqro_lG_BlP8[5F%:6"-7t!,k!jN%m;$?R.iAh`.5H39f31/KtXf<tIL%l7c*:bVta?2r2**%k*%m>^+G8FTn9XDu>Xg%!CauLHc@]VD\C0Jk&HE!SQWeO<;d(h.p'V?p\nHVeg8'lk%YXj8Of#.@\>F7?#cD9S_4o)p>%:/D7,uAQT:#+WiV6WFQ@*W1J'E3VjNWZ7D3A.I;%XKokMrN6f]:`C-HE@E552i(pQtnOAb'Y`-U_<fV7;JU?%(q2.ESq3/2i29q[2f`0[)Td!FTd_'2j+j'Z[\_hs]9<=/Q"ZFE"MNU)NdqqBRfV:Gdm0^*&GU;!=`u.lXQCj<&Yh?73q*]$$Ha/sh1>%FQN@cg10jjT?pOo'LFEW(q%D'G#[fDj&,N+X9W1(`<DS'eU>FD@Wem>hq%:8,;g5s-'5=V?WJMF*,sClU,8?9DY$ZX-l<).$$t-p!GrU6l:>EcJ;;3]RO[!:ZEQWZE[!+1"HAm2NDf\r[9k#_*9<i9s$QO)sd@o)sTe=-O`Z,eK:2__=JJ*(`bi&7]/b8cRH=``nHppnJ7$/,/`QIo>:0seepBDdp=f!h9b#A]jK(t<%Q`cLV:oG0?$n0J@JuY,M5r]-2FD/H$==:)bQ-s7`0ga,-7(uO(Nd&`M7;CBX8%0N=LC3%:<oL+nMhJFUN4^//N^>_-d4m@q#mgnm1"HJu[quf8'I8gpU6F*WRZs$JSJ78qYum4LA$$?oUkGQ-_u\F+b5b1_*5p+O@_TND/J_%d)M?P#BGmqG[IcFA60n#sk=KuWf&LOD/NlhCUh=?S4\(uU$Z2_W[%2Be:3rLTd0oRjVUR9J?JPHLn:g;,[%$b;YH^N%GX4"j^+N64>+S3EL:j@jmB##BCa:V/r1C-8pu=8i&"dE#.Co%^3H0lE%:;\ccU0DbYO2(s\d!$q[g!/sB]Ch7$aCh3SIX&_W&@rq\P+%0OZAQ3A\AH2b/<E"![Bl7P`!>A:@EcZ22@ruF.AOgcTA,lW'9lNm;C1Ums!!)7X;fm%oDJ&qLi(ZmZF*%B^gJ((M@rq\NImussDdu=L@:Wqi!!%43Ch7HpDKGjZY#\89:L\&=!/j<\Ch6"GF(96)E--#=!!"lCCi<g!!!.UL@:E2E@VfTU!Z=p^D.7F"9PIsVV&9%r%:@<-Vn!Cfn+DfABkF8u>.:i^JaARoq(AH2]<5t==4Df0Xs!6%WGDIlXQF8u;46Z6dZE]*mtcV/%oF8u;D6t(1G!!)%R:18!N!!"Q:@<6-m7VQ[T!!%(/Ch7HWBle@r!-CYGASk7aDfABkF8u:m6=FqL@n^TSAH2^e7VQLXEb,4OG#NL.Ch6F`DfABkF8u>^;fHYs6Z6dZE]*mtVaklDA7]f^!4tp5H"D!r!A72WFD(XS7mh32ir21B%:Ch7*uDfPgXTgs-AF`7<\,scQlDg,#dFD(XS!!&ntVZCf=VZCf=VZCf=VZCf=VZ99hVZ99gcN(oa`;mjW`;mjW`;mjW`;mjW`;n3a,lf4k,lf4k,lf4k,ll6lVZCf=VZCf=VZCf=VZCf=VZCf<cN)u*8H<i4huT_U])ZpQhuL@hF9$C_VZ>WUVZ==/F9(5"VZ==/8H<i4F9/9>irJ*>/HFf3FoX&nirQ%XF9*uo/-'bm/c[F&2_48C%:F9*uoF9*uoF9*uoirJ!;irF0%/chjMF9$C`/c]to/caf0T`F!NT`F!N])^.XVZ>`XJ,h,$VZ7)*VZEq$Fo]hghuMd<XoRJ^huIj!cN+[ZhuXu%)#uMoirF0$VZ>`WF9(5!T`M:rhuMd<VZ>`XVZ>`XVZ>`XVZ>`W=TII^klB`EVZ>WTMZDc<VZ>`WklB`DklB`DklB`DklB`EVZB6eirJ!;In"6_FCdjO@rGmh!<<*!s8N'!"hnNN%:~>%%EndAGDEmbeddedDoc%%BeginResource: procset Altsys_header 4 0userdict begin /AltsysDict 300 dict def endAltsysDict begin/bdf{bind def}bind def/xdf{exch def}bdf/defed{where{pop true}{false}ifelse}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/Xic{matrix invertmatrix concat}bdf/Xq{matrix currentmatrix mark}bdf/XQ{cleartomark setmatrix}bdf/sepdef{dup where not{AltsysSepDict}if 3 1 roll exch put}bdf/st{settransfer}bdf/colorimage defed /_rci xdf/cntr 0 def/readbinarystring{/cntr 0 def2 copy readstring{{dup(\034) search{length exch pop exchdup length 0 ne{dup dup 0 get 32 sub 0 exch put /cntr cntr 1 add def}{pop 1 string dup0 6 index read pop 32 sub put}ifelse3 copyputinterval pop1 add1 index length 1 sub1 index sub dup 0 le {pop pop exit}ifgetinterval}{pop exit} ifelse} loop}ifcntr 0 gt{pop 2 copydup length cntr sub cntr getintervalreadbinarystring} ifpop exch pop} bdf/_NXLevel2 defed { _NXLevel2 not { /colorimage where {userdict eq {/_rci false def } if} if} if} if/md defed{ md type /dicttype eq { /colorimage where { md eq { /_rci false def }if}if/settransfer where {md eq {/st systemdict /settransfer get def}if}if}if }if/setstrokeadjust defed{true setstrokeadjust/C{curveto}bdf/L{lineto}bdf/m{moveto}bdf}{/dr{transform .25 sub round .25 add exch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/setstrokeadjust{pop}bdf }ifelse/privrectpath { 4 -2 roll mdtransform round exch round exch idtransform 2 copy 0 lt exch 0 lt xor{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}ifelseclosepath}bdf/rectclip{newpath privrectpath clip newpath}def/rectfill{gsave newpath privrectpath fill grestore}def/rectstroke{gsave newpath privrectpath stroke grestore}def/_fonthacksave false def/currentpacking defed {/_bfh {/_fonthacksave currentpacking def false setpacking} bdf/_efh {_fonthacksave setpacking} bdf}{/_bfh {} bdf/_efh {} bdf}ifelse/packedarray{array astore readonly}ndf/` { false setoverprint /-save0- save def5 index concatpopstorerect left bottom width height rectclippop/MMdict_count countdictstack def/MMop_count count 1 sub defuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath} bdf/currentpacking defed{true setpacking}if/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/xformfont { currentfont exch makefont setfont } bdf/fhnumcolors 1 statusdict begin/processcolors defed {pop processcolors}{/deviceinfo defed {deviceinfo /Colors known {pop deviceinfo /Colors get} if} if} ifelseend def/printerRes gsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/graycalcs[{Angle Frequency} {GrayAngle GrayFrequency} {0 Width Height matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} {0 GrayWidth GrayHeight matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} ] def/calcgraysteps {forcemaxsteps{maxsteps}{/currenthalftone defed{currenthalftone /dicttype eq}{false}ifelse{currenthalftone beginHalftoneType 4 le{graycalcs HalftoneType 1 sub get exec}{HalftoneType 5 eq{Default begin{graycalcs HalftoneType 1 sub get exec}end}{0 60} ifelse}ifelseend}{currentscreen pop exch }ifelseprinterRes 300 max exch div exch 2 copy sin mul round dup mul 3 1 roll cos mul round dup mul add 1 add dup maxsteps gt {pop maxsteps} if dup minsteps lt {pop minsteps} if }ifelse} bdf/nextrelease defed { /languagelevel defed not { /framebuffer defed { 0 40 string framebuffer 9 1 roll 8 {pop} repeatdup 516 eq exch 520 eq or{/fhnumcolors 3 def/currentscreen {60 0 {pop pop 1}}bdf/calcgraysteps {maxsteps} bdf}if}if}if}iffhnumcolors 1 ne {/calcgraysteps {maxsteps} bdf} if/currentpagedevice defed {currentpagedevice /PreRenderingEnhance known{currentpagedevice /PreRenderingEnhance get{/calcgraysteps {forcemaxsteps {maxsteps}{256 maxsteps min}ifelse} def} if} if} if/gradfrequency 144 defprinterRes 1000 lt {/gradfrequency 72 def} if/adjnumsteps {dup dtransform abs exch abs max printerRes div gradfrequency mul round 5 max min }bdf/goodsep {spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or}bdf/BeginGradation defed{/bb{BeginGradation}bdf}{/bb{}bdf}ifelse/EndGradation defed{/eb{EndGradation}bdf}{/eb{}bdf}ifelse/bottom -0 def /delta -0 def /frac -0 def /height -0 def /left -0 def /numsteps1 -0 def /radius -0 def /right -0 def /top -0 def /width -0 def /xt -0 def /yt -0 def /df currentflat def /tempstr 1 string def /clipflatness currentflat def /inverted? 0 currenttransfer exec .5 ge def/tc1 [0 0 0 1] def /tc2 [0 0 0 1] def /storerect{/top xdf /right xdf /bottom xdf /left xdf /width right left sub def /height top bottom sub def}bdf/concatprocs{systemdict /packedarray known {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{ /proc2 exch cvlit def /proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{ /proc2 exch cvlit def /proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/i{dup 0 eq{pop df dup} {dup} ifelse /clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{ {/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/normtaper{}bdf/logtaper{9 mul 1 add log}bdf/CD{/NF exch def { exch dup /FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length /Len exch def dup length Len add string dup Len 4 -1 roll putinterval dup 0 4 -1 roll putinterval }bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{ dup FontDirectory exch known {pop 3 -1 roll pop} {RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdf/RCJ{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFJ exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFJ{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCJ} ifelse}bdf/hasfont{/resourcestatus where {pop /Font resourcestatus{ pop pop true}{ false}ifelse}{dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse}ifelse}bdf/FDFJ{dup hasfont not { pop/Ryumin-Light-83pv-RKSJ-Hhasfont {/Ryumin-Light-83pv-RKSJ-H}{/Courier}ifelse }if}bdf/FFJ{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFJ dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/GS {dup hasfont {findfontexch makesetfontexchpopts}{pop pop popts} ifelse} bdf/RCK{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFK exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFK{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCK} ifelse}bdf/hasfont{/resourcestatus where {pop /Font resourcestatus{ pop pop true}{ false}ifelse}{dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse}ifelse}bdf/FDFK{dup hasfont not { pop/JCsmhasfont {/JCsm}{/Courier}ifelse }if}bdf/FFK{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFK dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/RCTC{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFTC exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFTC{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCTC} ifelse}bdf/FDFTC{dup hasfont not { pop/DFMing-Lt-HK-BFhasfont {/DFMing-Lt-HK-BF}{/Courier}ifelse }if}bdf/FFTC{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFTC dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/fps{currentflat exch dup 0 le{pop 1}if {dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} {exit} ifelse}loop pop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf /W{/clipper load 100 clipflatness dup setflat fps}bdfuserdict begin /BDFontDict 29 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}def/:M {pop pop} def/sf {pop} def/S {pop} def/@b {pop pop pop pop pop pop pop pop} def/_bdsave /save load def/_bdrestore /restore load def/save { dup /fontsave eq {null} {_bdsave} ifelse } def/restore { dup null eq { pop } { _bdrestore } ifelse } def/fontsave null defend/MacVec 256 array def MacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash /questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/findheaderfont {/Helvetica findfont } defend %. AltsysDict%%EndResource%%EndProlog%%BeginSetupAltsysDict begin_bfh _efh end %. AltsysDict%%EndSetupAltsysDict begin /onlyk4{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/cmyk2gray{4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 muladd add add 1 min neg 1 add}bdf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/maxcolor { max max max } ndf/maxspot {pop} ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 packedarray}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{setgray}ndf/setoverprint{pop}ndf /currentoverprint false ndf/cmykbufs2gray{0 1 2 index length 1 sub{ 4 index 1 index get 0.3 mul 4 index 2 index get 0.59 mul 4 index 3 index get 0.11 mul 4 index 4 index get add add add cvi 255 min255 exch sub2 index 3 1 roll put}for4 1 roll pop pop pop}bdf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelseand{userdict begin bdf end}{ndf}ifelsefhnumcolors 1 ne {/yt save def} if/customcolorimage{aload pop(_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdfic im iy ik cmyk2gray /xt xdfcurrenttransfer{dup 1.0 exch sub xt mul add}concatprocsst image}ifelse}ndffhnumcolors 1 ne {yt restore} iffhnumcolors 3 ne {/yt save def} if/customcolorimage{aload pop (_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdf1.0 dup ic ik add min sub 1.0 dup im ik add min sub 1.0 dup iy ik add min sub /ic xdf /iy xdf /im xdfcurrentcolortransfer4 1 roll {dup 1.0 exch sub ic mul add}concatprocs 4 1 roll {dup 1.0 exch sub iy mul add}concatprocs 4 1 roll {dup 1.0 exch sub im mul add}concatprocs 4 1 roll setcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage}ifelse}ndffhnumcolors 3 ne {yt restore} iffhnumcolors 4 ne {/yt save def} if/customcolorimage{aload pop(_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdfcurrentcolortransfer{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}true 4 colorimage}ifelse}ndffhnumcolors 4 ne {yt restore} if/separationimage{image}ndf/spotascmyk false ndf/newcmykcustomcolor{6 packedarray}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf /setspotcolor { spots exch getdup 4 get (_vc_Registration) eq{pop 1 exch sub setseparationgray}{0 5 getinterval exch setcustomcolor}ifelse}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{st pop pop pop}ndf/fas{}ndf/sas{}ndf/fhsetspreadsize{pop}ndf/filler{fill}bdf /F{gsave {filler}fp grestore}bdf/f{closepath F}bdf/S{gsave {stroke}fp grestore}bdf/s{closepath S}bdfuserdict /islevel2systemdict /languagelevel known dup{pop systemdict /languagelevel get 2 ge} ifputislevel2 not{/currentcmykcolor{0 0 0 1 currentgray sub} ndf} if/tc{gsavesetcmykcolor currentcmykcolorgrestore} bind def/testCMYKColorThrough{tc add add add 0 ne} bind def/fhiscomposite where not {userdict /fhiscompositeislevel2{gsave 1 1 1 1 setcmykcolor currentcmykcolor grestoreadd add add 4 eq}{1 0 0 0 testCMYKColorThrough0 1 0 0 testCMYKColorThrough0 0 1 0 testCMYKColorThrough0 0 0 1 testCMYKColorThroughand and and} ifelseput}{ pop }ifelse/bc4 [0 0 0 0] def /_lfp4 {1 pop /yt xdf /xt xdf /ang xdf storerect/taperfcn xdf/k2 xdf /y2 xdf /m2 xdf /c2 xdf/k1 xdf /y1 xdf /m1 xdf /c1 xdfc1 c2 sub absm1 m2 sub absy1 y2 sub absk1 k2 sub absmaxcolor calcgraysteps mul abs round height abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfcurrentflat mark currentflat clipflatness /delta top bottom sub numsteps1 1 add div def /right right left sub def /botsv top delta sub def {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse taperfcn /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/bcs [0 0] def /_lfs4 {/yt xdf /xt xdf /ang xdf storerect/taperfcn xdf/tint2 xdf /tint1 xdf bcs exch 1 exch put tint1 tint2 sub abs bcs 1 get maxspot calcgraysteps mul abs round height abs adjnumsteps dup 2 lt {pop 2} if 1 sub /numsteps1 xdfcurrentflat mark currentflat clipflatness /delta top bottom sub numsteps1 1 add div def /right right left sub def /botsv top delta sub def {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 div taperfcn /frac xdfbcs 01.0 tint2 tint1 sub frac mul tint1 add subput bcs vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/_rfs6 {/tint2 xdf /tint1 xdf bcs exch 1 exch put /inrad xdf /radius xdf /yt xdf /xt xdf tint1 tint2 sub abs bcs 1 get maxspot calcgraysteps mul abs round radius inrad sub abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfradius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 2 div /halfstep xdf currentflat mark currentflat clipflatness {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbcs 0tint2 tint1 sub frac mul tint1 addput bcs vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/_rfp6 {1 pop /k2 xdf /y2 xdf /m2 xdf /c2 xdf/k1 xdf /y1 xdf /m1 xdf /c1 xdf/inrad xdf /radius xdf /yt xdf /xt xdf c1 c2 sub absm1 m2 sub absy1 y2 sub absk1 k2 sub absmaxcolor calcgraysteps mul abs round radius inrad sub abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfradius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 2 div /halfstep xdf currentflat mark currentflat clipflatness {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/lfp4{_lfp4}ndf/lfs4{_lfs4}ndf/rfs6{_rfs6}ndf/rfp6{_rfp6}ndf/cvc [0 0 0 1] def /vc{AltsysDict /cvc 2 index put aload length dup 4 eq{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}{6 eq {sethexcolor} {setspotcolor} ifelse }ifelse}bdf 0 setseparationgray/imgr {1692 1584 2304 2376 } def /bleed 0 def /clpr {1692 1584 2304 2376 } def /xs 1 def /ys 1 def /botx 0 def /overlap 0 def /wdist 18 def 0 2 mul fhsetspreadsize 0 0 ne {/df 0 def /clipflatness 0 def} if /maxsteps 256 def /forcemaxsteps false def /minsteps 0 def userdict begin /AGDOrigMtx matrix currentmatrix def end vms-1781 -2048 translate/currentpacking defed{false setpacking}if /spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor1 0.65 0 0.305 (PANTONE 288 CVC) false newcmykcustomcolor]defn[] 0 d3.863708 M1 w0 j0 Jfalse setoverprint0 ifalse eomode[0 0 0 1]vcvms1781.1418 2154.9416 m1781.1418 2205.7258 1846.0974 2261.6007 1989.7559 2261.6007 C2133.4146 2261.6007 2198.3671 2205.7258 2198.3671 2154.9416 C2198.3671 2104.1575 2133.4146 2048.2943 1989.7559 2048.2943 C1846.0974 2048.2943 1781.1418 2104.1575 1781.1418 2154.9416 C[1 4]vcf n1795.071 2154.9416 m1795.071 2202.7842 1855.6868 2255.4218 1989.756 2255.4218 C2123.8221 2255.4218 2184.438 2202.7842 2184.438 2154.9416 C2184.438 2107.099 2123.8221 2054.4731 1989.756 2054.4731 C1855.6868 2054.4731 1795.071 2107.099 1795.071 2154.9416 C[0 0 1 0]vcf n1882.0692 2133.8992 m1882.1107 2133.4317 1881.7263 2133.1178 1881.081 2132.8636 C1865.2721 2125.7122 1872.8355 2108.7104 1892.3307 2107.3705 C1902.2223 2106.6896 1916.1369 2111.1582 1916.3846 2121.9936 C1916.5273 2128.348 1913.2704 2132.7978 1901.1787 2138.1952 C1890.1594 2142.7358 1879.0844 2146.878 1867.9898 2151.425 C1855.7214 2157.2836 1847.4306 2163.8734 1844.7525 2171.138 C1840.1424 2183.6335 1844.673 2197.7232 1857.2304 2205.493 C1869.8635 2213.2626 1888.4865 2217.6246 1910.5087 2215.4028 C1937.5039 2212.6759 1944.5227 2203.4189 1948.1185 2196.8823 C1953.2515 2187.5593 1942.9416 2176.7518 1924.5511 2178.5091 C1923.6419 2178.597 1922.9203 2178.6001 1922.5812 2179.3628 C1922.3081 2179.9839 1922.5453 2180.373 1922.8491 2181.123 C1926.8943 2191.0643 1922.334 2202.355 1901.4469 2202.355 C1892.942 2202.355 1884.7332 2197.7181 1884.0017 2190.2359 C1883.6953 2186.0905 1886.7168 2182.2449 1897.2108 2178.1136 C1904.4951 2174.1035 1918.1268 2170.0868 1931.1319 2163.999 C1945.6795 2157.1926 1959.8445 2145.8049 1959.112 2129.5877 C1957.7289 2099.0359 1927.2401 2089.0884 1890.4159 2090.193 C1861.7549 2091.053 1843.9567 2104.1196 1840.483 2110.998 C1829.1554 2133.4474 1857.4078 2148.3434 1880.6267 2135.6596 C1881.6062 2135.2516 1881.9794 2134.8312 1882.0692 2133.8992 C[0 1 1 0]vcf n2055.29 2209.3348 m2057.2123 2215.2253 2060.4822 2223.1964 2067.3704 2228.6712 C2077.9571 2237.0859 2091.8863 2240.0977 2107.6734 2232.2779 C2103.9002 2219.7893 2094.9322 2216.0852 2084.7657 2214.5168 C2076.9794 2213.3144 2069.2731 2213.4466 2055.29 2209.3348 Cf n1965.4966 2215.3996 m1965.2747 2224.4227 1975.9552 2231.8264 1989.3519 2231.9344 C2002.7488 2232.042 2013.7907 2224.8158 2014.0123 2215.7925 C2014.2343 2206.7727 2003.5505 2199.3689 1990.1569 2199.2612 C1976.757 2199.1535 1965.7183 2206.3796 1965.4966 2215.3996 Cf n1989.7546 2192.2165 m1997.7958 2192.2583 2005.6194 2193.0576 2009.5546 2193.5376 C2010.0524 2193.5984 2010.4399 2193.6763 2010.9598 2193.3086 C2011.4808 2192.94 2011.4718 2192.3639 2011.4718 2192.3639 C2011.4623 2101.3835 L2011.4623 2098.3134 2007.1246 2091.8004 1989.7546 2091.8004 C1972.3843 2091.8004 1968.0466 2098.3134 1968.0466 2101.3835 C1968.0371 2192.3639 L1968.0371 2192.3639 1968.028 2192.94 1968.549 2193.3086 C1969.0689 2193.6763 1969.4566 2193.5984 1969.9545 2193.5376 C1973.8898 2193.0576 1981.713 2192.2583 1989.7546 2192.2165 Cf n2019.6803 2149.2875 m2019.6803 2181.9703 2048.3416 2208.4638 2083.7002 2208.4638 C2119.0586 2208.4638 2147.7197 2181.9703 2147.7197 2149.2875 C2147.7197 2116.6048 2119.0586 2090.1112 2083.7002 2090.1112 C2048.3416 2090.1112 2019.6803 2116.6048 2019.6803 2149.2875 Cf n2061.4113 2149.2893 m2061.4113 2173.5598 2071.3896 2193.234 2083.7002 2193.234 C2096.0106 2193.234 2105.9889 2173.5598 2105.9889 2149.2893 C2105.9889 2125.0185 2096.0106 2105.3412 2083.7002 2105.3412 C2071.3896 2105.3412 2061.4113 2125.0185 2061.4113 2149.2893 C[0 0 1 0]vcf nvmrvmrend%%Trailer